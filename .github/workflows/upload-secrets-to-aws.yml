name: Simple AWS Upload Test

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest

    env:
      # Hardcoded AWS credentials
      AWS_ACCESS_KEY_ID: ASIA2YTIIEU5IJJFY3A7
      AWS_SECRET_ACCESS_KEY: KkFLePEb+SB6tQZJonIazIqXzFhxyjuhD6ZbMHON
      AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjENL//////////wEaCXVzLXdlc3QtMiJGMEQCIBoPqhqjfP8/H3dt3T0GX+gGiD/CMtQOElPKCvppBcMDAiBbcvfArfX2q1L+/TaWq17eB6mKIk3TlxfcLEtKFugnyCq5Agjr//////////8BEAAaDDc0MDAyNjc1NDM2MiIMRQOqwwN2cFIdHcrdKo0CE0Xp5FTlZl/O+kakK7153ivBX0LmJk9ALhUbpU9jcjs50XDQZLxoFm1OvRRbcdOxlqL+wn5pSgXLOLjk5qhT0vFAYtCp0E1s5uJqK9EU8/+ii6bLV7T5fB/Z27jFL87RlwSMlKwoL7t4ZrmRh6iXX82TYWSXTR/jJ27UMLOIpppC4LcBh6MOJbbH/Gu1rz5CebCd012bEztLRVeIughdSsOcXaibrqOzMHnsA5v3rFLtMXsXCUeIN/x2KU0B7AFuDTrlo0Z0lBmCIguGV9vVC3hlmySUivhSCyI+WPReBFvnZd0/r8Ibr3RnhiClZpim/e8/msv/OPXjNew72tEtW1H7K/k1B2e8s4cTpL0w48j9wwY6ngFYo1t0mx5TQvWgf9gixWD3/YqQg5lwetHvPSFPZtzLbAWEGOFX99m4r38FecuGiAbbh6amb0P0xsG2sk6vLz9297oPMTNgR0yLkUG0cP6TtRjJYi/9XWR14tCu/uFFqg0ne0kTTCDGaN6/6A/MotBSKVrNh+4FeFnDgDlxCIhKctAtIPG1qoCBqSZHdZWZwtUtAUO5pfTk/PmMQTUyvA==
      AWS_REGION: us-west-2

    steps:
      - name: Test AWS Connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity

      - name: Upload GitHub Secrets to AWS SSM
        env:
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          API_KEY: ${{ secrets.API_KEY }}
          MONITORING_TOKEN: ${{ secrets.MONITORING_TOKEN }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
        run: |
          echo "Uploading secrets to AWS SSM..."
          
          # Upload DATABASE_PASSWORD
          if [ -n "$DATABASE_PASSWORD" ]; then
            aws ssm put-parameter \
              --name "/test/DATABASE_PASSWORD" \
              --value "$DATABASE_PASSWORD" \
              --type "SecureString" \
              --overwrite
            echo "‚úÖ DATABASE_PASSWORD uploaded"
          fi

          # Upload DATABASE_URL
          if [ -n "$DATABASE_URL" ]; then
            aws ssm put-parameter \
              --name "/test/DATABASE_URL" \
              --value "$DATABASE_URL" \
              --type "SecureString" \
              --overwrite
            echo "‚úÖ DATABASE_URL uploaded"
          fi

          # Upload API_KEY
          if [ -n "$API_KEY" ]; then
            aws ssm put-parameter \
              --name "/test/API_KEY" \
              --value "$API_KEY" \
              --type "SecureString" \
              --overwrite
            echo "‚úÖ API_KEY uploaded"
          fi

          # Upload MONITORING_TOKEN
          if [ -n "$MONITORING_TOKEN" ]; then
            aws ssm put-parameter \
              --name "/test/MONITORING_TOKEN" \
              --value "$MONITORING_TOKEN" \
              --type "SecureString" \
              --overwrite
            echo "‚úÖ MONITORING_TOKEN uploaded"
          fi

          # Upload REDIS_URL
          if [ -n "$REDIS_URL" ]; then
            aws ssm put-parameter \
              --name "/test/REDIS_URL" \
              --value "$REDIS_URL" \
              --type "SecureString" \
              --overwrite
            echo "‚úÖ REDIS_URL uploaded"
          fi

      - name: Upload GitHub Variables to AWS SSM
        env:
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          APP_VERSION: ${{ vars.APP_VERSION }}
          CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
          ECR_REPOSITORY: ${{ vars.ECR_REPOSITORY }}
        run: |
          echo "Uploading variables to AWS SSM..."
          
          # Upload ENVIRONMENT
          if [ -n "$ENVIRONMENT" ]; then
            aws ssm put-parameter \
              --name "/test/ENVIRONMENT" \
              --value "$ENVIRONMENT" \
              --type "String" \
              --overwrite
            echo "‚úÖ ENVIRONMENT uploaded: $ENVIRONMENT"
          fi

          # Upload APP_VERSION
          if [ -n "$APP_VERSION" ]; then
            aws ssm put-parameter \
              --name "/test/APP_VERSION" \
              --value "$APP_VERSION" \
              --type "String" \
              --overwrite
            echo "‚úÖ APP_VERSION uploaded: $APP_VERSION"
          fi

          # Upload CLUSTER_NAME
          if [ -n "$CLUSTER_NAME" ]; then
            aws ssm put-parameter \
              --name "/test/CLUSTER_NAME" \
              --value "$CLUSTER_NAME" \
              --type "String" \
              --overwrite
            echo "‚úÖ CLUSTER_NAME uploaded: $CLUSTER_NAME"
          fi

          # Upload ECR_REPOSITORY
          if [ -n "$ECR_REPOSITORY" ]; then
            aws ssm put-parameter \
              --name "/test/ECR_REPOSITORY" \
              --value "$ECR_REPOSITORY" \
              --type "String" \
              --overwrite
            echo "‚úÖ ECR_REPOSITORY uploaded: $ECR_REPOSITORY"
          fi

      - name: Retrieve and Display from AWS SSM
        run: |
          echo "=== Retrieving from AWS SSM ==="
          
          echo "üìã All parameters under /test/:"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --recursive \
            --query 'Parameters[*].[Name,Type]' \
            --output table

          echo "üîí Secrets (values hidden for security):"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --parameter-filters "Key=Type,Values=SecureString" \
            --query 'Parameters[*].Name' \
            --output table

          echo "üìù Variables (values visible):"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --parameter-filters "Key=Type,Values=String" \
            --query 'Parameters[*].[Name,Value]' \
            --output table

          echo "‚úÖ Upload and retrieval complete!"
