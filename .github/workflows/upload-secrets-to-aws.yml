name: Hardcoded Upload to AWS SSM

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest

    env:
      # üîê AWS credentials for testing (not recommended for production)
      AWS_ACCESS_KEY_ID: ASIA2YTIIEU5IJJFY3A7
      AWS_SECRET_ACCESS_KEY: KkFLePEb+SB6tQZJonIazIqXzFhxyjuhD6ZbMHON
      AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjENL//////////wEaCXVzLXdlc3QtMiJGMEQCIBoPqhqjfP8/H3dt3T0GX+gGiD/CMtQOElPKCvppBcMDAiBbcvfArfX2q1L+/TaWq17eB6mKIk3TlxfcLEtKFugnyCq5Agjr//////////8BEAAaDDc0MDAyNjc1NDM2MiIMRQOqwwN2cFIdHcrdKo0CE0Xp5FTlZl/O+kakK7153ivBX0LmJk9ALhUbpU9jcjs50XDQZLxoFm1OvRRbcdOxlqL+wn5pSgXLOLjk5qhT0vFAYtCp0E1s5uJqK9EU8/+ii6bLV7T5fB/Z27jFL87RlwSMlKwoL7t4ZrmRh6iXX82TYWSXTR/jJ27UMLOIpppC4LcBh6MOJbbH/Gu1rz5CebCd012bEztLRVeIughdSsOcXaibrqOzMHnsA5v3rFLtMXsXCUeIN/x2KU0B7AFuDTrlo0Z0lBmCIguGV9vVC3hlmySUivhSCyI+WPReBFvnZd0/r8Ibr3RnhiClZpim/e8/msv/OPXjNew72tEtW1H7K/k1B2e8s4cTpL0w48j9wwY6ngFYo1t0mx5TQvWgf9gixWD3/YqQg5lwetHvPSFPZtzLbAWEGOFX99m4r38FecuGiAbbh6amb0P0xsG2sk6vLz9297oPMTNgR0yLkUG0cP6TtRjJYi/9XWR14tCu/uFFqg0ne0kTTCDGaN6/6A/MotBSKVrNh+4FeFnDgDlxCIhKctAtIPG1qoCBqSZHdZWZwtUtAUO5pfTk/PmMQTUyvA==
      AWS_REGION: us-west-2

      # üß© Dynamic lists
      SECRET_NAMES: DATABASE_PASSWORD,DATABASE_URL,API_KEY,MONITORING_TOKEN,REDIS_URL
      VAR_NAMES: ENVIRONMENT,APP_VERSION,CLUSTER_NAME,ECR_REPOSITORY

      # üîê Sample secret values (in real use, fetch from GitHub Secrets)
      DATABASE_PASSWORD: test_db_pass
      DATABASE_URL: jdbc://localhost:3306/test
      API_KEY: abc123key
      MONITORING_TOKEN: zabbix-token
      REDIS_URL: redis://localhost:6379

      # üîß Sample variable values
      ENVIRONMENT: dev
      APP_VERSION: 1.0.2
      CLUSTER_NAME: test-cluster
      ECR_REPOSITORY: sample-repo

    steps:
      - name: Check AWS Connection
        run: |
          echo "Testing AWS connection..."
          aws sts get-caller-identity

      - name: Upload Secrets to AWS SSM
        run: |
          echo "üîê Uploading secrets to AWS SSM..."
          IFS=',' read -ra NAMES <<< "$SECRET_NAMES"
          for name in "${NAMES[@]}"; do
            value="${!name}"
            echo "‚Üí Uploading $name"
            aws ssm put-parameter \
              --name "/test/$name" \
              --value "$value" \
              --type "SecureString" \
              --region "$AWS_REGION" \
              --overwrite
          done

      - name: Upload Variables to AWS SSM
        run: |
          echo "‚öôÔ∏è Uploading variables to AWS SSM..."
          IFS=',' read -ra NAMES <<< "$VAR_NAMES"
          for name in "${NAMES[@]}"; do
            value="${!name}"
            echo "‚Üí Uploading $name"
            aws ssm put-parameter \
              --name "/test/$name" \
              --value "$value" \
              --type "String" \
              --region "$AWS_REGION" \
              --overwrite
          done

      - name: Retrieve and Display from AWS SSM
        run: |
          echo "üì• Retrieving parameters from SSM..."

          echo "üîê SecureString parameters:"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --recursive \
            --parameter-filters "Key=Type,Values=SecureString" \
            --query 'Parameters[*].Name' \
            --output table

          echo "‚öôÔ∏è String parameters with values:"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --recursive \
            --parameter-filters "Key=Type,Values=String" \
            --query 'Parameters[*].[Name,Value]' \
            --output table

          echo "‚úÖ Upload and retrieval complete."
