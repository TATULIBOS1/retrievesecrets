name: Working Dynamic Upload to AWS SSM

on:
  workflow_dispatch:

jobs:
  upload:
    runs-on: ubuntu-latest

    env:
      # AWS credentials
      AWS_ACCESS_KEY_ID: ASIA2YTIIEU5IJJFY3A7
      AWS_SECRET_ACCESS_KEY: KkFLePEb+SB6tQZJonIazIqXzFhxyjuhD6ZbMHON
      AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjENL//////////wEaCXVzLXdlc3QtMiJGMEQCIBoPqhqjfP8/H3dt3T0GX+gGiD/CMtQOElPKCvppBcMDAiBbcvfArfX2q1L+/TaWq17eB6mKIk3TlxfcLEtKFugnyCq5Agjr//////////8BEAAaDDc0MDAyNjc1NDM2MiIMRQOqwwN2cFIdHcrdKo0CE0Xp5FTlZl/O+kakK7153ivBX0LmJk9ALhUbpU9jcjs50XDQZLxoFm1OvRRbcdOxlqL+wn5pSgXLOLjk5qhT0vFAYtCp0E1s5uJqK9EU8/+ii6bLV7T5fB/Z27jFL87RlwSMlKwoL7t4ZrmRh6iXX82TYWSXTR/jJ27UMLOIpppC4LcBh6MOJbbH/Gu1rz5CebCd012bEztLRVeIughdSsOcXaibrqOzMHnsA5v3rFLtMXsXCUeIN/x2KU0B7AFuDTrlo0Z0lBmCIguGV9vVC3hlmySUivhSCyI+WPReBFvnZd0/r8Ibr3RnhiClZpim/e8/msv/OPXjNew72tEtW1H7K/k1B2e8s4cTpL0w48j9wwY6ngFYo1t0mx5TQvWgf9gixWD3/YqQg5lwetHvPSFPZtzLbAWEGOFX99m4r38FecuGiAbbh6amb0P0xsG2sk6vLz9297oPMTNgR0yLkUG0cP6TtRjJYi/9XWR14tCu/uFFqg0ne0kTTCDGaN6/6A/MotBSKVrNh+4FeFnDgDlxCIhKctAtIPG1qoCBqSZHdZWZwtUtAUO5pfTk/PmMQTUyvA==
      AWS_REGION: us-west-1

    steps:
      - name: Test AWS Credentials
        run: |
          echo "üîê Testing AWS credentials..."
          aws --version
          aws sts get-caller-identity

      - name: Upload GitHub Secrets to SSM (Dynamic)
        env:
          MY_SECRET1: ${{ secrets.MY_SECRET1 }}
          MY_SECRET2: ${{ secrets.MY_SECRET2 }}
        run: |
          echo "üîí Uploading secrets to AWS SSM..."
          
          # Define secrets to upload
          declare -A secrets_map
          secrets_map["MY_SECRET1"]="$MY_SECRET1"
          secrets_map["MY_SECRET2"]="$MY_SECRET2"
          
          for secret_name in "${!secrets_map[@]}"; do
            value="${secrets_map[$secret_name]}"
            if [ -n "$value" ]; then
              echo "‚Üí Uploading $secret_name"
              aws ssm put-parameter \
                --name "/test/$secret_name" \
                --value "$value" \
                --type "SecureString" \
                --region "$AWS_REGION" \
                --overwrite
              echo "‚úÖ $secret_name uploaded successfully"
            else
              echo "‚ö†Ô∏è $secret_name is empty or not set"
            fi
          done

      - name: Upload GitHub Variables to SSM (Dynamic)
        env:
          MY_VAR1: ${{ vars.MY_VAR1 }}
          MY_VAR2: ${{ vars.MY_VAR2 }}
        run: |
          echo "üìù Uploading variables to AWS SSM..."
          
          # Define variables to upload
          declare -A vars_map
          vars_map["MY_VAR1"]="$MY_VAR1"
          vars_map["MY_VAR2"]="$MY_VAR2"
          
          for var_name in "${!vars_map[@]}"; do
            value="${vars_map[$var_name]}"
            if [ -n "$value" ]; then
              echo "‚Üí Uploading $var_name (value: $value)"
              aws ssm put-parameter \
                --name "/test/$var_name" \
                --value "$value" \
                --type "String" \
                --region "$AWS_REGION" \
                --overwrite
              echo "‚úÖ $var_name uploaded successfully"
            else
              echo "‚ö†Ô∏è $var_name is empty or not set"
            fi
          done

      - name: Retrieve Uploaded Parameters from SSM
        run: |
          echo "üì• All parameters under /test/:"
          aws ssm get-parameters-by-path \
            --path "/test/" \
            --with-decryption \
            --recursive \
            --query 'Parameters[*].[Name,Type,Value]' \
            --output table

          echo "‚úÖ Upload and retrieval complete!"
